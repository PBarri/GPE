{
  "name": "GPE",
  "tagline": "Gestor de Proyectos y Equipos",
  "body": "# GPE\r\n## Gestión de Proyectos y Equipos\r\n\r\nLa aplicación **GPE**, _(Gestión de Proyectos y Equipos)_, es un sistema pensado para gestionar de forma más eficiente proyectos de software basados\r\nen la metodología Métrica V3.\r\n \r\nEl alcance actual del proyecto se centrará en la planificación temporal de los proyectos, teniendo previstas futuras ampliaciones.\r\n\r\nEl proyecto cuenta actualmente con las siguientes funcionalidades:\r\n\r\n* **Gestión de Proyectos**\r\n    * Dashboard\r\n    * Listado de proyectos\r\n    * Listado de requerimientos\r\n    * Creación de proyectos\r\n    * Creación de requerimientos\r\n    * Planificación temporal\r\n* **Gestión de tareas**\r\n    * Listado de tareas\r\n    * Imputar horas trabajadas\r\n    * Creación de tareas\r\n    * Asignación de tareas\r\n* **Gestión de usuarios**\r\n    * Creación de usuarios\r\n    * Listado de usuarios\r\n    * Edición del perfil de usuario\r\n    * Gestión de vacaciones\r\n    * Gestión de ausencias\r\n    * Gestión de horarios\r\n* **Módulo de informes**\r\n    * Informe de situación\r\n    * Informe de imputaciones\r\n    * Informe de usuarios\r\n    \r\nA continuación se detallará información sobre el proyecto. Para pasar a la guía rápida, pulse [aquí](#guiarapida)\r\n\r\n## Estructura del Proyecto\r\n\r\nEl proyecto se divide en 4 módulos diferentes: `utils`, `data`, `batch` y `web`.\r\n\r\n* El módulo `utils` es un proyecto java que contiene clases de utilidad para el resto de módulos.\r\n* El módulo `data` es una aplicación de tipo **Spring Boot**, encargada de la capa de acceso a datos.\r\n* El módulo `batch` es una aplicación web de tipo **Spring Boot**, encargada de planificar y realizar los trabajos diarios.\r\n* El módulo `web` es una aplicación web de tipo **Spring Boot**, encargada de la visualización de la aplicación.\r\n\r\n\r\n### Estructura de directorios\r\n\r\n```\r\ngpe/\r\n  batch/\r\n    src/\r\n      main/\r\n        java/\r\n          batch/                  --> *directorios correspondientes a paquetes omitidos*\r\n            appConfig/              --> Paquete con las clases de configuración\r\n            jobs/                   --> Paquete con los distintos jobs\r\n            listeners/              --> Paquete con los listeners   \r\n            BatchApplication.java   --> Clase principal Spring Boot\r\n        resources/\r\n        webapp/\r\n      test/\r\n  data/\r\n    src/\r\n      main/\r\n        java/\r\n          data/\r\n            converters/             --> Paquete con todos los convertidores\r\n            dto/                    --> Paquete con los dtos necesarios\r\n            enums/                  --> Enumerados de la aplicación (datos paramétricos)\r\n            exceptions/             --> Excepciones\r\n            filters/                --> Interfaces con los filtros disponibles para cada entidad\r\n            model/                  --> Entidades JPA\r\n            repositories/           --> Repositorios de JPA\r\n            services/               --> Servicios de la aplicación\r\n            DataConfiguration.java  --> Clase de configuración\r\n      test/\r\n  utils/\r\n    src/\r\n      main/\r\n        java/\r\n          utils/                    --> Paquete con todas las clases de utilidad\r\n  web/\r\n    src/\r\n      main/\r\n        java/\r\n          web/                      --> *directorios correspondientes a paquetes omitidos*\r\n            aspects/                --> Clases de AspectJ\r\n            config/                 --> Paquete con las clases de configuración\r\n            controllers/            --> Paquete con los controladores de JSF\r\n            exceptions/             --> Paquete con las excepciones\r\n            primefaces/             --> Paquete con las modificaciones de Primefaces\r\n            utils/                  --> Paquete con las utilidades propias del proyecto web\r\n            WebApplication.java     --> Clase principal Spring Boot\r\n        resources/\r\n        webapp/\r\n          css/                      --> Carpeta con todos los archivos css\r\n          error/                    --> Carpeta que contiene las páginas de error\r\n          font/                     --> Carpeta con las fuentes\r\n          img/                      --> Carpeta con las imágenes usadas en la aplicación\r\n          js/                       --> Carpeta con los archivos javascript usados en la aplicación\r\n          views/                    --> Carpeta con las distintas vistas de la aplicación\r\n          WEB-INF/                  --> Carpeta conteniendo los archivos necesarios para formar el WAR\r\n          index.xhtml               --> Página principal de la aplicación\r\n          login.html                --> Página del login\r\n      test/\r\n```\r\n\r\n## Arquitectura\r\n\r\n### Instalación standalone\r\n\r\n![diagramadesplieuge](https://github.com/PBarri/GPE/blob/master/lib/diagrama1.png)\r\n\r\n### Docker\r\n\r\n_En Construcción_\r\n\r\n## Entorno de desarrollo\r\n\r\nPara la ejecución del proyecto se han utilizado las siguientes tecnologías:\r\n\r\n* Java jdk 1.8\r\n* JBoss Wildfly 9+\r\n* Gradle 3.1\r\n* Oracle Database 11g\r\n* Spring Boot 1.4.2\r\n    * Spring Web\r\n    * Spring Security\r\n    * Spring Data JPA\r\n    * Spring AOP\r\n    * Spring Batch\r\n    * Spring Integration\r\n* JSF 2.2\r\n* Primefaces 6.0\r\n* jQuery 1.9\r\n* QueryDsl 4\r\n* Google Charts\r\n\r\n## <a name=\"guiarapida\"></a>Guía Rápida\r\n\r\n### Instalar dependencias\r\n\r\nPara gestionar las dependencias hemos usado la herramienta [gradle](https://gradle.org/).\r\n\r\nSe ha preconfigurado `gradle` para automáticamente compilar y montar el proyecto, de forma que, en una terminal situada\r\nen la raíz del proyecto, ejecutamos:\r\n\r\n```\r\ngradlew dist\r\n```\r\n\r\nEste comando realizará las siguientes acciones:\r\n\r\n* Compilará el código fuente de todos los módulos\r\n* Creará los archivos war de los módulos `batch` y `web`\r\n* Moverá estos archivos a la carpeta `dist`\r\n\r\n*_NOTA: Para instalar en Eclipse, necesitarás instalar el plugin  [Buildship](https://projects.eclipse.org/projects/tools.buildship), y después importar el proyecto._*\r\n\r\n### Ejecutar la aplicación\r\n\r\n_**NOTA:Una vez arrancada la aplicación, se podrá acceder a ella con el usuario y contraseña Admin/Admin**_\r\n\r\n#### Docker\r\n\r\nSe ha preconfigurado [Docker](https://www.docker.com/), junto con dos tareas de `gradle` para poder crear y ejecutar la aplicación\r\ndentro de un contenedor de Docker.\r\n\r\n```\r\ngradlew dockerBuild\r\n```\r\n\r\nEsta tarea creará un contenedor de Docker con el nombre `pbarri\\gpe`\r\n\r\n```\r\ngradlew dockerRun\r\n```\r\n\r\nEsta tarea ejecutará el contenedor anterior.\r\n\r\nDespués de ejecutar esta tarea, la aplicación estará disponible en `http://localhost:8080/GPE`.\r\n\r\n*_NOTA: Necesitarás tener Docker instalado en tu ordenador para usar esta funcionalidad_*\r\n\r\n#### Servidor de aplicaciones\r\n\r\nPara ejecutar la aplicación, simplemente tendremos que ejecutar el comando de `gradle`\r\n\r\n```\r\ngradlew dist\r\n```\r\n\r\nSe creará una carpeta, `dist`, en la raíz del proyecto con los archivos war tanto de la parte batch como de la web.\r\n \r\nHabrá que desplegar estos archivos en nuestro servidor de aplicaciones.\r\n\r\n## Versionado de la aplicación\r\n\r\nEste proyecto sigue el versionado semántico, con el formato `MAJOR.MINOR.PATCH`.\r\n\r\nDado una versión, habrá que incrementar:\r\n\r\n* `MAJOR` cuando se hayan introducido cambios incompatibles con la API anterior. \r\n* `MINOR` cuando se ha introducido nueva funcionalidad compatible hacia atrás con la API existente. \r\n* `PATCH` para resolución de bugs con compatibilidad hacia atrás.\r\n\r\nAdemas, se han incluido dos etiquetas, `SNAPSHOT` and `RELEASE` para distinguir entre candidatos a una nueva versión estable y las versiones estables.\r\n\r\nPara ayudar con el versionado, se han incluído tareas de gradle para cambiar la versión. A continuación se muestran los comandos necesarios para crear\r\nuna nueva versión:\r\n\r\n* `gradlew majorRelease dist`\r\n* `gradlew minorRelease dist`\r\n* `gradlew patchRelease dist`\r\n* `gradlew majorSnapshot dist`\r\n* `gradlew minorSnapshot dist`\r\n* `gradlew patchSnapshot dist`\r\n \r\n*NOTA: En la versión actual, el archivo `gradle.properties` debe ser subido al repositorio de forma manual después de cambiar la versión.*\r\n\r\n## Testing\r\n\r\n`SECCIÓN EN PROGRESO`\r\n\r\n\r\n## Bibliografía\r\n\r\n* [Documentación Metrica V3](http://administracionelectronica.gob.es/pae_Home/pae_Documentacion/pae_Metodolog/pae_Metrica_v3.html)\r\n* [Documentación Spring](https://spring.io/)\r\n* [Documentación Primefaces](http://www.primefaces.org/)\r\n* [Documentación Gradle](http://gradle.org/)\r\n* [Stackoverflow](http://stackoverflow.com/)\r\n\r\n\r\n# Licencia\r\n\r\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Licencia de Creative Commons\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a><br /><span xmlns:dct=\"http://purl.org/dc/terms/\" property=\"dct:title\">GPE</span> by <span xmlns:cc=\"http://creativecommons.org/ns#\" property=\"cc:attributionName\">Pablo Barrientos</span> is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Reconocimiento-NoComercial-CompartirIgual 4.0 Internacional License</a>.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}